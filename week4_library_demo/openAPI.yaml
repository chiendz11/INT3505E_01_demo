openapi: 3.0.0
info:
  title: API Gateway cho Dịch vụ Thư viện
  description: Đây là tài liệu API cho API Gateway, đóng vai trò proxy và xác thực cho các microservice backend (Auth, Books, Transactions).
  version: 1.0.0
servers:
  - url: /
    description: Server Gateway (đường dẫn tương đối)
tags:
  - name: Auth
    description: API liên quan đến xác thực, đăng ký, và quản lý token.
  - name: Books
    description: API để quản lý sách (yêu cầu xác thực).
  - name: Transactions
    description: API để quản lý giao dịch mượn/trả sách.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Access Token (JWT) nhận được khi đăng nhập, gửi qua header 'Authorization'.
  schemas:
    UserRegister:
      type: object
      properties:
        username:
          type: string
          example: newuser
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: strongpassword123
    UserLogin:
      type: object
      properties:
        login:
          type: string
          example: newuser
          description: Có thể là username hoặc email
        password:
          type: string
          example: strongpassword123
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          type: object
          properties:
            user_id:
              type: string
              example: uuid-cho-user
            username:
              type: string
              example: newuser
            role:
              type: string
              example: user
    Book:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Lập trình Python
        author:
          type: string
          example: John Doe
        stock:
          type: integer
          example: 10
    BookCreate:
      type: object
      properties:
        title:
          type: string
          example: Sách mới
        author:
          type: string
          example: Tác giả mới
        stock:
          type: integer
          example: 20
    TransactionCreate:
      type: object
      description: Dữ liệu để tạo giao dịch (frontend chỉ cần gửi book_id và type)
      properties:
        book_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
        type:
          type: string
          example: borrow
          enum:
            - borrow
            - return
    BorrowedBook:
      type: object
      description: Thông tin sách đang mượn đã được làm giàu
      properties:
        book_id:
          type: integer
          example: 1
        book_title:
          type: string
          example: Lập trình Python
        borrowed_count:
          type: integer
          example: 1
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Service is unavailable
paths:
  /users:
    post:
      tags:
        - Auth
      summary: Đăng ký người dùng mới
      description: 'Tạo một tài nguyên ''user'' mới. Endpoint: POST /api/users'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '200':
          description: Đăng ký thành công
        '400':
          description: Dữ liệu không hợp lệ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/tokens:
    post:
      tags:
        - Auth
      summary: Đăng nhập và lấy token
      description: 'Tạo một tài nguyên ''token'' mới (Đăng nhập). Endpoint: POST /api/auth/tokens'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Đăng nhập thành công, trả về access_token và thông tin user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Sai thông tin đăng nhập
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Auth
      summary: Làm mới Access Token
      description: 'Cập nhật/Làm mới một ''access token'' (dùng Refresh Token trong HttpOnly cookie). Endpoint: PUT /api/auth/tokens'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Làm mới thành công
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
        '401':
          description: Refresh token không hợp lệ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Auth
      summary: Đăng xuất
      description: 'Xóa một tài nguyên ''token'' (Đăng xuất). Endpoint: DELETE /api/auth/tokens'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Đăng xuất thành công
        '401':
          description: Chưa đăng nhập
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/google/login:
    get:
      tags:
        - Auth
      summary: Bắt đầu luồng đăng nhập Google
      description: 'Chuyển hướng người dùng đến trang đăng nhập của Google. Endpoint: GET /api/auth/google/login'
      responses:
        '302':
          description: Chuyển hướng đến Google
  /auth/google/callback:
    get:
      tags:
        - Auth
      summary: Xử lý callback từ Google
      description: 'Endpoint mà Google gọi lại sau khi người dùng xác thực. Endpoint: GET /api/auth/google/callback'
      parameters:
        - in: query
          name: code
          schema:
            type: string
          description: Mã code từ Google
        - in: query
          name: state
          schema:
            type: string
          description: State
      responses:
        '200':
          description: Đăng nhập thành công, trả về token (hoặc redirect về frontend với token)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /books:
    get:
      tags:
        - Books
      summary: Lấy danh sách sách (phân trang)
      description: Bất kỳ 'user' nào cũng có thể xem
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: author_filter
          schema:
            type: string
        - in: header
          name: If-None-Match
          schema:
            type: string
          description: Header ETag để kiểm tra cache (Client tự động gửi)
      responses:
        '200':
          description: Danh sách sách
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
          headers:
            ETag:
              description: Giá trị ETag của nội dung
              schema:
                type: string
            Cache-Control:
              description: 'Chỉ thị cache (ví dụ: ''max-age=60'')'
              schema:
                type: string
        '304':
          description: Not Modified. Nội dung cache của client vẫn hợp lệ (không có body).
    post:
      tags:
        - Books
      summary: Tạo sách mới (Chỉ Admin)
      description: CHỈ ADMIN
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        '201':
          description: Tạo sách thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '403':
          description: Không có quyền Admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /books/cursor:
    get:
      tags:
        - Books
      summary: Lấy danh sách sách (kiểu cursor)
      description: Lấy danh sách sách dùng cursor-based pagination
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          description: Cursor cho trang tiếp theo
      responses:
        '200':
          description: Danh sách sách và cursor tiếp theo
  /books/{book_id}:
    get:
      tags:
        - Books
      summary: Lấy chi tiết một cuốn sách
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: integer
        - in: header
          name: If-None-Match
          schema:
            type: string
          description: Header ETag để kiểm tra cache (Client tự động gửi)
      responses:
        '200':
          description: Chi tiết sách
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          headers:
            ETag:
              description: Giá trị ETag của nội dung
              schema:
                type: string
            Cache-Control:
              description: 'Chỉ thị cache (ví dụ: ''max-age=60'')'
              schema:
                type: string
        '304':
          description: Not Modified. Nội dung cache của client vẫn hợp lệ (không có body).
        '404':
          description: Không tìm thấy sách
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Books
      summary: Cập nhật sách (Chỉ Admin)
      description: CHỈ ADMIN
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreate'
      responses:
        '200':
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '403':
          description: Không có quyền Admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Không tìm thấy sách
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Books
      summary: Xóa sách (Chỉ Admin)
      description: CHỈ ADMIN
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Xóa thành công
        '403':
          description: Không có quyền Admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Không tìm thấy sách
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /transactions:
    post:
      tags:
        - Transactions
      summary: Tạo giao dịch (mượn/trả)
      description: Tạo giao dịch cho user đang đăng nhập. Gateway sẽ tự động thêm 'user_id' vào body request.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreate'
      responses:
        '201':
          description: Tạo giao dịch thành công
        '400':
          description: 'Dữ liệu không hợp lệ (ví dụ: hết sách)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /me/borrowed-books:
    get:
      tags:
        - Transactions
      summary: Lấy danh sách sách đang mượn của tôi
      description: Lấy danh sách sách đang mượn của user hiện tại.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Danh sách sách đang mượn (đã làm giàu thông tin)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BorrowedBook'
  /me/transactions:
    get:
      tags:
        - Transactions
      summary: Lấy lịch sử giao dịch của tôi
      description: Lấy toàn bộ lịch sử giao dịch của user hiện tại.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Danh sách tất cả giao dịch